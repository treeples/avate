import random

HANGMAN_PICS = ['''
    +---+
    0   |
        |
        |
        ===''','''
    +---+
    0   |
    |   |
        |
        ===''','''
    +---+
    0   |
   /|   |
        |
        ===''','''
    +---+
    0   |
   /|\  |
        |
        ===''','''
    +---+
    0   |
   /|\  |
   /    |
        ===''', '''
    +---+
    0   |
   /|\  |
   / \  |
        ===''']

WORDS = [  # СПИСОК
    'python',
    'javascript',
    'roblox'
]
MAX_ERRORS = 5
 
 
def return_random_word():  # ФУНКЦИЯ РАНДОМА
    return random.choice(WORDS)
 
 
def handle_user_input():  # ФУНКЦИЯ ВВОДА ЛИТЕРАЛА
    user_input = input('Пожалуйста, введите букву: ')
    if user_input.count() > 1:
      sys.exit
    else:  
      if user_input.isalpha() == True:
        return user_input.lower()
      else:
        sys.exit()
 
def get_initial_statuses(word):  # ФУНКЦИЯ "СПИСОК FALSE = литера" [FALSE,FALSE,FALSE...]
    statuses = []
    for letter in word:
        statuses.append(False)
    return statuses
 
 
def is_game_finished(statuses, current_errors):  # ФУНКЦИЯ "КОНЕЦ ИГРЫ или ПРОДОЛЖЕНИЕ" True или False
    if current_errors >= MAX_ERRORS:
        return True
    for status in statuses:
        if not status:
            return False
    return True
 
 
def perfom_check_action(word, statuses, letter):  # ФУНКЦИЯ "БУКВА В СЛОВЕ" [FALSE, TRUE, FALSE...]
    if letter not in word:
        return False
 
    for index, l in enumerate(word):
        if letter == l:
            statuses[index] = True
 
    return True
 
 
def print_word(word, statuses):  # ФУНКЦИЯ "ПЕЧАТЬ БУКВЫ В СЛОВЕ" _ _ _ Б _ _
    for index, letter in enumerate(word):
        if statuses[index]:
            print(letter, end='')
        else:
            print('_', end=' ')
    print()
 
def drow_picture(current_errors):
    if current_errors == 0:
        print(HANGMAN_PICS[0])
    elif current_errors == 1:
        print(HANGMAN_PICS[1]) 
    elif current_errors == 2:
        print(HANGMAN_PICS[2])
    elif current_errors == 3:
        print(HANGMAN_PICS[3])   
    elif current_errors == 4:
        print(HANGMAN_PICS[4])  
 
def main():  # ФУНКЦИЯ main()
    word = return_random_word()
    statuses = get_initial_statuses(word)
    current_errors = 0
    while not is_game_finished(statuses, current_errors):
        print_word(word, statuses)
        print('Осталось попыток: ', MAX_ERRORS - current_errors)
        drow_picture(current_errors)
        letter = handle_user_input()
        result = perfom_check_action(word, statuses, letter)

        if not result:
            current_errors += 1
 
    if current_errors >= MAX_ERRORS:
        print('Вы проиграли!')
        print(HANGMAN_PICS[5])
    else:
        print('Вы выиграли!')
    
        
main()